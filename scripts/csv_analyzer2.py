# analise_queimadas.py
# Descri√ß√£o: An√°lise explorat√≥ria de dados sobre queimadas no estado do Maranh√£o
# Bibliotecas: pandas, matplotlib, seaborn

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os

# Configura√ß√£o est√©tica do seaborn
sns.set(style="whitegrid", palette="Set2")

# Caminho do arquivo CSV
CAMINHO_CSV = "../data/queimadas_ma.csv"

# Diret√≥rios de sa√≠da
DIR_RESULTADOS = "../results"
DIR_GRAFICOS = os.path.join(DIR_RESULTADOS, "graphs")

os.makedirs(DIR_GRAFICOS, exist_ok=True)

print("üîç Carregando base de dados...")
df = pd.read_csv(CAMINHO_CSV)

print("\n‚úÖ Base carregada com sucesso!")
print(f"Linhas: {df.shape[0]}, Colunas: {df.shape[1]}")

# Exibir as primeiras linhas
print("\nüìÑ Visualiza√ß√£o inicial:")
print(df.head())

# Informa√ß√µes gerais
print("\n‚ÑπÔ∏è Informa√ß√µes da base:")
print(df.info())

# Estat√≠sticas descritivas
print("\nüìä Estat√≠sticas descritivas:")
print(df.describe(include='all'))

# Verificar valores nulos
print("\nüö® Valores nulos por coluna:")
print(df.isnull().sum())

# Exemplo de colunas comuns (voc√™ pode ajustar conforme o seu CSV)
# Vamos supor que temos colunas como: "estado", "municipio", "ano", "mes", "numero_queimadas"
# Caso tenha outro nome, voc√™ pode adaptar aqui.

if "ano" in df.columns and "municipio" in df.columns:
    # Queimadas por ano
    queimadas_por_ano = df.groupby("ano").size()
    queimadas_por_ano.plot(kind="bar", figsize=(10, 5))
    plt.title("N√∫mero de queimadas por ano - Maranh√£o")
    plt.xlabel("Ano")
    plt.ylabel("N√∫mero de ocorr√™ncias")
    plt.tight_layout()
    plt.savefig(os.path.join(DIR_GRAFICOS, "queimadas_por_ano.png"))
    plt.close()

    # Queimadas por m√™s (se houver coluna 'mes')
    if "mes" in df.columns:
        queimadas_por_mes = df.groupby("mes").size().sort_index()
        queimadas_por_mes.plot(kind="bar", figsize=(10, 5), color="orange")
        plt.title("N√∫mero de queimadas por m√™s - Maranh√£o")
        plt.xlabel("M√™s")
        plt.ylabel("N√∫mero de ocorr√™ncias")
        plt.tight_layout()
        plt.savefig(os.path.join(DIR_GRAFICOS, "queimadas_por_mes.png"))
        plt.close()

    # Top 10 munic√≠pios
    top_municipios = df["municipio"].value_counts().head(10)
    top_municipios.plot(kind="bar", figsize=(10, 5), color="green")
    plt.title("Top 10 munic√≠pios com mais queimadas")
    plt.xlabel("Munic√≠pio")
    plt.ylabel("N√∫mero de ocorr√™ncias")
    plt.tight_layout()
    plt.savefig(os.path.join(DIR_GRAFICOS, "top10_municipios.png"))
    plt.close()

print("\nüìÇ Gr√°ficos salvos em:", DIR_GRAFICOS)

# Salvar estat√≠sticas em arquivo
with open(os.path.join(DIR_RESULTADOS, "estatisticas.txt"), "w", encoding="utf-8") as f:
    f.write("Resumo da An√°lise de Queimadas no Maranh√£o\n")
    f.write("=" * 50 + "\n\n")
    f.write(str(df.describe(include='all')))
    f.write("\n\nValores nulos por coluna:\n")
    f.write(str(df.isnull().sum()))
    f.write("\n\nTop 10 munic√≠pios com mais queimadas:\n")
    f.write(str(top_municipios))

print("\nüìë Estat√≠sticas salvas com sucesso!")
